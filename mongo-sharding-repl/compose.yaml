name: mongo-sharding-repl
services:
  configSrv:
    image: mongo:latest
    container_name: configSrv 
    restart: always
    ports:
      - "27017:27017"

    volumes:
      - config-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet", "config_server",
        "--bind_ip_all",
        "--port", "27017"
      ] 
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1:
    image: mongo:latest
    container_name: shard1
    restart: always
    ports:
      - "27018:27018"

    volumes:
      - shard1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet", "shard1",
        "--bind_ip_all",
        "--port", "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s  

  shard2:
    image: mongo:latest
    container_name: shard2
    restart: always
    ports:
      - "27019:27019"

    volumes:
      - shard2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet", "shard2",
        "--bind_ip_all",
        "--port", "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "27020:27020"

    command:
      [
        "mongos",
        "--configdb", "config_server/configSrv:27017",
        "--bind_ip_all",
        "--port", "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  pymongo_api2:
    container_name: pymongo_api2
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api1:1.0.0
    depends_on:
      - mongos_router
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://mongos_router:27020"  # Уточните порт для подключения
      MONGODB_DATABASE_NAME: "somedb"
  
  shard1_1:
    image: mongo:latest
    container_name: shard1_1
    restart: always
    ports:
      - "27021:27021"
    volumes:
      - shard1_1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet", "shard1",
        "--bind_ip_all",
        "--port", "27021"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1_2:
    image: mongo:latest
    container_name: shard1_2
    restart: always
    ports:
      - "27022:27022"
    volumes:
      - shard1_2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet", "shard1",
        "--bind_ip_all",
        "--port", "27022"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1_3:
    image: mongo:latest
    container_name: shard1_3
    restart: always
    ports:
      - "27023:27023"
    volumes:
      - shard1_3-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet", "shard1",
        "--bind_ip_all",
        "--port", "27023"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2_1:
    image: mongo:latest
    container_name: shard2_1
    restart: always
    ports:
      - "27024:27024"
    volumes:
      - shard2_1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet", "shard2",
        "--bind_ip_all",
        "--port", "27024"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2_2:
    image: mongo:latest
    container_name: shard2_2
    restart: always
    ports:
      - "27025:27025"
    volumes:
      - shard2_2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet", "shard2",
        "--bind_ip_all",
        "--port", "27025"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2_3:
    image: mongo:latest
    container_name: shard2_3
    restart: always
    ports:
      - "27026:27026"
    volumes:
      - shard2_3-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet", "shard2",
        "--bind_ip_all",
        "--port", "27026"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

volumes:
  config-data:
  shard1-data:
  shard2-data:
  shard1_1-data:
  shard1_2-data:
  shard1_3-data:
  shard2_1-data:
  shard2_2-data:
  shard2_3-data:
    
